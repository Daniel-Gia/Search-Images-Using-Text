"use client";

import Header from "../components/Header";
import UploadDropZone from "../components/UploadDropZone";
import StatusMessage from "../components/StatusMessage";
import Instructions from "../components/Instructions";
import UploadPreviewGrid from "../components/UploadPreviewGrid";
import { useImageUpload } from "../components/hooks/useImageUpload";

export default function UploadPage() {
  const {
    selectedFiles,
    previews,
    uploading,
    uploadStatus,
    errorMessage,
    handleFileSelect,
    handleError,
    handleUpload,
    resetUpload,
  } = useImageUpload();

  const instructionSteps = [
    {
      number: 1,
      title: "Select Images",
      description: "Choose one or more images from your device or drag and drop them"
    },
    {
      number: 2,
      title: "Upload & Index",
      description: "The images are uploaded and automatically indexed for searching"
    },
    {
      number: 3,
      title: "Search & Find",
      description: "Use text descriptions to find your images in the gallery"
    }
  ];

  // Remove image from selection
  const handleRemove = (idx: number) => {
    const newFiles = selectedFiles.filter((_, i) => i !== idx);
    handleFileSelect(newFiles);
    // Previews will be regenerated by handleFileSelect
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
      <Header 
        title="Upload Images" 
        actionButton={{
          href: "/",
          text: "Back to Gallery",
          variant: "secondary",
          icon: (
            <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 19l-7-7m0 0l7-7m-7 7h18" />
            </svg>
          )
        }}
      />

      <main className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="bg-white rounded-xl shadow-lg border border-blue-200 overflow-hidden">
          {/* Upload Area */}
          <div className="p-8 space-y-6">
            {selectedFiles.length === 0 ? (
              <UploadDropZone onFileSelect={handleFileSelect} onError={handleError} />
            ) : (
              <>
                <UploadPreviewGrid previews={previews} files={selectedFiles} onRemove={handleRemove} />
                <div className="flex gap-4 mt-6">
                  <button
                    onClick={handleUpload}
                    disabled={uploading}
                    className="bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white px-8 py-3 rounded-lg font-semibold transition-colors shadow-md hover:shadow-lg flex items-center justify-center gap-2"
                  >
                    {uploading ? (
                      <>
                        <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white"></div>
                        Uploading...
                      </>
                    ) : (
                      <>
                        <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
                        </svg>
                        Upload {selectedFiles.length > 1 ? `${selectedFiles.length} Images` : "Image"}
                      </>
                    )}
                  </button>
                  <button
                    onClick={resetUpload}
                    disabled={uploading}
                    className="bg-gray-500 hover:bg-gray-600 disabled:bg-gray-400 text-white px-8 py-3 rounded-lg font-semibold transition-colors shadow-md"
                  >
                    Choose Different Images
                  </button>
                </div>
              </>
            )}
          </div>

          {/* Status Messages */}
          <StatusMessage status={uploadStatus} message={errorMessage} />
        </div>

        {/* Instructions */}
        <Instructions title="How it works" steps={instructionSteps} />
      </main>
    </div>
  );
}
